{"ast":null,"code":"var _jsxFileName = \"/Users/dhirenmotwani/Downloads/ramp-test/src/components/Transactions/TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState(transaction.approved);\n\n  const handleToggle = async () => {\n    const newValue = !approved;\n    console.log(); // Optimistically update UI\n\n    setApproved(newValue);\n\n    try {\n      await consumerSetTransactionApproval({\n        transactionId: transaction.id,\n        newValue\n      });\n    } catch (err) {\n      // Revert if the request fails\n      setApproved(approved);\n      console.error(\"Failed to toggle approval\", err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionPane, \"KPAjtgwy0mvFAelnTZhq541SWIA=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","setApproved","handleToggle","newValue","console","log","transactionId","id","err","error","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","Intl","NumberFormat","style","currency"],"sources":["/Users/dhirenmotwani/Downloads/ramp-test/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState(transaction.approved)\n  const handleToggle = async () => {\n    const newValue = !approved\n    console.log()\n    // Optimistically update UI\n    setApproved(newValue)\n\n    try {\n      await consumerSetTransactionApproval({\n        transactionId: transaction.id,\n        newValue,\n      })\n    } catch (err) {\n      // Revert if the request fails\n      setApproved(approved)\n      console.error(\"Failed to toggle approval\", err)\n    }\n  }\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={handleToggle}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC;EAHgC,CAIpD;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,WAAW,CAACI,QAAb,CAAxC;;EACA,MAAME,YAAY,GAAG,YAAY;IAC/B,MAAMC,QAAQ,GAAG,CAACH,QAAlB;IACAI,OAAO,CAACC,GAAR,GAF+B,CAG/B;;IACAJ,WAAW,CAACE,QAAD,CAAX;;IAEA,IAAI;MACF,MAAMJ,8BAA8B,CAAC;QACnCO,aAAa,EAAEV,WAAW,CAACW,EADQ;QAEnCJ;MAFmC,CAAD,CAApC;IAID,CALD,CAKE,OAAOK,GAAP,EAAY;MACZ;MACAP,WAAW,CAACD,QAAD,CAAX;MACAI,OAAO,CAACK,KAAR,CAAc,2BAAd,EAA2CD,GAA3C;IACD;EACF,CAhBD;;EAiBA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBZ,WAAW,CAACc,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBhB,WAAW,CAACiB,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGjB,WAAW,CAACkB,QAAZ,CAAqBC,SADxB,OACoCnB,WAAW,CAACkB,QAAZ,CAAqBE,QADzD,SACsEpB,WAAW,CAACqB,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAErB,WAAW,CAACW,EADlB;MAEE,OAAO,EAAEP,QAFX;MAGE,QAAQ,EAAEH,OAHZ;MAIE,QAAQ,EAAEK;IAJZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAxCM;;GAAMP,e;;KAAAA,e;AA0Cb,MAAMgB,cAAc,GAAG,IAAIO,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}