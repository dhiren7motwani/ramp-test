{"ast":null,"code":"var _jsxFileName = \"/Users/dhirenmotwani/Downloads/ramp-test/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { EMPTY_EMPLOYEE } from \"src/utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions,\n    selectedEmployee,\n    refetchPaginated,\n    refetchByEmployee\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    }); // ✅ Re-fetch the appropriate list\n\n    if (selectedEmployee.id === EMPTY_EMPLOYEE.id) {\n      await refetchPaginated();\n    } else {\n      await refetchByEmployee(selectedEmployee.id);\n    }\n  }, [fetchWithoutCache, selectedEmployee, refetchPaginated, refetchByEmployee]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"sgwD+zRVN/Jp//f26sYJJv93t2c=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useCustomFetch","TransactionPane","EMPTY_EMPLOYEE","Transactions","transactions","selectedEmployee","refetchPaginated","refetchByEmployee","fetchWithoutCache","loading","setTransactionApproval","transactionId","newValue","value","id","map","transaction"],"sources":["/Users/dhirenmotwani/Downloads/ramp-test/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { TransactionsComponent, SetTransactionApprovalFunction } from \"./types\"\nimport { EMPTY_EMPLOYEE } from \"src/utils/constants\"\n\nexport const Transactions: TransactionsComponent = ({\n  transactions,\n  selectedEmployee,\n  refetchPaginated,\n  refetchByEmployee,\n}) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n\n  const setTransactionApproval: SetTransactionApprovalFunction = useCallback(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n  \n      // ✅ Re-fetch the appropriate list\n      if (selectedEmployee.id === EMPTY_EMPLOYEE.id) {\n        await refetchPaginated()\n      } else {\n        await refetchByEmployee(selectedEmployee.id)\n      }\n    },\n    [fetchWithoutCache, selectedEmployee, refetchPaginated, refetchByEmployee]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,OAAO,MAAMC,YAAmC,GAAG,QAK7C;EAAA;;EAAA,IAL8C;IAClDC,YADkD;IAElDC,gBAFkD;IAGlDC,gBAHkD;IAIlDC;EAJkD,CAK9C;EACJ,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCT,cAAc,EAArD;EAEA,MAAMU,sBAAsD,GAAGX,WAAW,CACxE,eAAuC;IAAA,IAAhC;MAAEY,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMJ,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFG,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB,CADqC,CAMrC;;IACA,IAAIP,gBAAgB,CAACS,EAAjB,KAAwBZ,cAAc,CAACY,EAA3C,EAA+C;MAC7C,MAAMR,gBAAgB,EAAtB;IACD,CAFD,MAEO;MACL,MAAMC,iBAAiB,CAACF,gBAAgB,CAACS,EAAlB,CAAvB;IACD;EACF,CAbuE,EAcxE,CAACN,iBAAD,EAAoBH,gBAApB,EAAsCC,gBAAtC,EAAwDC,iBAAxD,CAdwE,CAA1E;;EAiBA,IAAIH,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACW,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEP,OAHX;MAIE,sBAAsB,EAAEC;IAJ1B,GACOM,WAAW,CAACF,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAzCM;;GAAMX,Y;UAM4BH,c;;;KAN5BG,Y"},"metadata":{},"sourceType":"module"}